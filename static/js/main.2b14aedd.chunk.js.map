{"version":3,"sources":["components/Profile/Profile.module.css","components/Friends/Friends.module.css","components/Friends/FriendListItem.jsx","components/Friends/FriendList.jsx","components/Profile/Profile.jsx","components/Statistics/StatisticsItem.jsx","components/Statistics/Statistics.jsx","components/Transaction/TransactionItem.jsx","components/Transaction/TransactionHistory.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FriendListItem","avatar","name","isOnline","className","style","item","status","isOffline","src","alt","width","FriendList","friends","friendList","map","friend","id","Profile","username","tag","location","stats","profile","description","label","quantity","followers","views","likes","StatisticsItem","percentage","class","Statistic","undefined","title","el","TransactionItem","type","amount","currency","TransactionHistory","items","App","user","Statistics","data","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b14aedd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1tWCz\",\"avatar\":\"Profile_avatar__jZBK7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"Friends_friendList__2qVN2\",\"item\":\"Friends_item__1S3Fv\",\"avatar\":\"Friends_avatar__1lsjt\",\"status\":\"Friends_status__1f18H\",\"isOffline\":\"Friends_isOffline__3_RXX\"};","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport style from \"./Friends.module.css\";\r\n\r\nfunction FriendListItem({ avatar, name, isOnline }) {\r\n  return (\r\n    <li className={style.item}>\r\n      <span className={`${style.status} ${isOnline ? \"\" : style.isOffline}`}>\r\n        {isOnline}\r\n      </span>\r\n\r\n      <img className={style.avatar} src={avatar} alt=\"User avatar\" width=\"48\" />\r\n      <p className={style.name}>{name}</p>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default FriendListItem;\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string,\r\n  isOnline: PropTypes.bool,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FriendListItem from \"./FriendListItem\";\r\nimport style from \"./Friends.module.css\";\r\n\r\nfunction FriendList({ friends }) {\r\n  return (\r\n    <ul className={style.friendList}>\r\n      {friends.map((friend) => (\r\n        <FriendListItem\r\n          key={friend.id}\r\n          avatar={friend.avatar}\r\n          name={friend.name}\r\n          isOnline={friend.isOnline}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default FriendList;\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.array,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Profile.module.css\";\r\n\r\nfunction Profile({ username, tag, location, avatar, stats }) {\r\n  return (\r\n    <div className={style.profile}>\r\n      <div className={style.description}>\r\n        <img src={avatar} alt=\"User avatar\" className={style.avatar} />\r\n        <p className={style.name}>{username}</p>\r\n        <p className={style.tag}>{tag}</p>\r\n        <p className={style.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={style.stats}>\r\n        <li>\r\n          <span className={style.label}>Followers</span>\r\n          <span className={style.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={style.label}>Views</span>\r\n          <span className={style.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={style.label}>Likes</span>\r\n          <span className={style.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nexport default Profile;\r\n\r\nProfile.propTypes = {\r\n  username: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  stats: PropTypes.object,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nfunction StatisticsItem({ label, percentage }) {\r\n  return (\r\n    <li class=\"item\">\r\n      <span class=\"label\">{label}</span>\r\n      <span class=\"percentage\">{percentage}</span>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default StatisticsItem;\r\n\r\nStatisticsItem.propTypes = {\r\n  label: PropTypes.string,\r\n  percentage: PropTypes.number,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StatistiscItem from \"./StatisticsItem\";\r\n\r\nfunction Statistic({ stats }) {\r\n  return (\r\n    <section class=\"statistics\">\r\n      {stats.title !== undefined && <h2 class=\"title\">Upload stats</h2>}\r\n      <ul class=\"stat-list\">\r\n        {stats.map((el) => (\r\n          <StatistiscItem\r\n            key={el.id}\r\n            label={el.label}\r\n            percentage={el.percentage}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Statistic;\r\n\r\nStatistic.propTypes = {\r\n  data: PropTypes.array,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction TransactionItem({ type, amount, currency }) {\r\n  return (\r\n    <tr>\r\n      <td>{type}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default TransactionItem;\r\nTransactionItem.propTypes = {\r\n  type: PropTypes.string,\r\n  amount: PropTypes.string,\r\n  currency: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TransactionItem from \"./TransactionItem\";\r\n\r\nfunction TransactionHistory({ items }) {\r\n  return (\r\n    <table class=\"transaction-history\">\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map((item) => (\r\n          <TransactionItem\r\n            key={item.id}\r\n            type={item.type}\r\n            amount={item.amount}\r\n            currency={item.currency}\r\n          />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default TransactionHistory;\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.array,\r\n};\r\n","import React from \"react\";\nimport friends from \"./data/friends.json\";\nimport user from \"./data/user.json\";\nimport data from \"./data/data.json\";\nimport transactions from \"./data/transactions.json\";\nimport FriendList from \"./components/Friends/FriendList\";\nimport Profile from \"./components/Profile/Profile\";\nimport Statistics from \"./components/Statistics/Statistics.jsx\";\nimport TransactionHistory from \"./components/Transaction/TransactionHistory.jsx\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FriendList friends={friends} />\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={data} />\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}